#!/bin/bash

if [[ "$@" == *"--help"* ]]; then
  echo "mongok script, wrapper around common mongod client commands to connect directly"
  echo "to the mongo which sits in this kave. Reads the contents of /etc/mongoclient.conf"
  echo "understands export import perf stat dump files oplog restore top and the mongo shell"
  echo ""
  echo "usage: mongok [command] [other arguments]"
  echo "e.g.: mongok /foo #opens the mongo shell to mongo_host:mongo_port/foo database"
  echo "e.g.: mongok top #starts mongotop --host mongo_host:mongo_port"
fi

## Funcion to secure and open the config file in a secure way
secureAndOpenConfigFile() {
	configfile='/etc/mongoclient.conf'

	# Saves the actual directory
	local actualDir=$(pwd)

	cd ~
	if ([ -r $configfile ]) then
		local configfile_secured='/tmp/mongoclient.conf'

		# check if the file contains something we don't want
		if egrep -q -v '^#|^[^ ]*=[^;]*' "$configfile"; then
		  	echo -e "Config file is unclean, cleaning it..."
			# filter the original to a new file
		  	egrep '^#|^[^ ]*=[^;&]*'  "$configfile" > "$configfile_secured"
		  	configfile="$configfile_secured"
		fi

		echo "Reading config...."

		source "$configfile"
	else
		echo -e "/etc/mongoclient.conf was not found!"
	fi

	# Returns to the directory saved
	cd "$actualDir"
}

checkListeningPort() {
	local server=$(echo ":$1" | tr ":" " ")

	# For multiple local host names: lsof -Pi @someLocalName:8080 -sTCP:LISTEN
	# Or you can use n: nc -vz 127.0.0.1 8080 (nc -l 1234 # escuta a porta 1234)
	if nc -z -w1 $server > /dev/null; then
    echo "RUNNING"
	else
    echo "NOT RUNNING"
	fi
}

mongo_hosts=node1.test.com:27017,localhost:27919,neuroserver.com.br:79

declare -A mongoServersStatus

hosts=$(echo $mongo_hosts | tr "," " ")

for host in $hosts
do
  mongoServersStatus[$host]=$(checkListeningPort $host)
  echo "$host is $(checkListeningPort $host)"
  if [[ ${mongoServersStatus[$host]} == "RUNNING" ]]; then
    if [ -z "$1" ]; then
      mongo ${host}
    elif [[ "$known_commands" == *"$1"* ]]; then
      mongo$@ --host ${host}
    elif [[ "${1:0:1}" == "/" ]]; then
      mongo ${host}$@
    else
      mongo ${host} $@
    fi

    # End the loop
    break
  fi
done
